{"version":3,"file":"commands.js","mappings":"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","sources":["webpack://word-req-inserter/./src/commands/commands.js"],"sourcesContent":["/*\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\n * See LICENSE in the project root for license information.\n */\n\n/* global Office, Word */\n\nOffice.onReady(() => {\n  // If needed, Office.js is ready to be called.\n});\n\n/**\n * Inserts a new requirement with incremental number format [REQ_XXXX]\n * @param event {Office.AddinCommands.Event}\n */\nasync function insertNewRequirement(event) {\n  console.log(\"=== Starting requirement insertion ===\");\n  \n  try {\n    await Word.run(async (context) => {\n      // Get the entire document text to search for existing requirements\n      console.log(\"Loading document content...\");\n      const documentBody = context.document.body;\n      context.load(documentBody, \"text\");\n      \n      await context.sync();\n      \n      // Find all existing requirements using regex\n      const regex = /\\[REQ_(\\d{4})\\]/g;\n      const matches = documentBody.text.match(regex);\n      \n      let nextReqNumber = 1; // Default value if no requirements found\n      \n      if (matches) {\n        console.log(`Found ${matches.length} existing requirements`);\n        // Extract numbers and find the highest one\n        const reqNumbers = matches.map(match => {\n          const numberMatch = match.match(/\\[REQ_(\\d{4})\\]/);\n          return parseInt(numberMatch[1], 10);\n        });\n        \n        const maxReqNumber = Math.max(...reqNumbers);\n        nextReqNumber = maxReqNumber + 1;\n        console.log(`Next requirement number will be: ${nextReqNumber}`);\n      } else {\n        console.log(\"No existing requirements found, starting with REQ_0001\");\n      }\n      \n      // Format the requirement text\n      const reqText = `[REQ_${nextReqNumber.toString().padStart(4, '0')}]`;\n      const bookmarkName = `REQ_${nextReqNumber.toString().padStart(4, '0')}`;\n      console.log(`Inserting requirement: ${reqText}`);\n      \n      // Insert the requirement at the current selection\n      const selection = context.document.getSelection();\n      const insertedRange = selection.insertText(reqText, Word.InsertLocation.replace);\n      context.load(insertedRange);\n      \n      await context.sync();\n      console.log(\"Requirement text inserted successfully\");\n      \n      // Add bookmark to the inserted requirement\n      try {\n        insertedRange.insertBookmark(bookmarkName);\n        console.log(`Bookmark '${bookmarkName}' added successfully`);\n      } catch (bookmarkError) {\n        console.error(\"Error adding bookmark:\", bookmarkError);\n      }\n\n      // Apply style if it exists\n      try {\n        insertedRange.style = \"REQ_TITLE\";\n        console.log(\"Style 'REQ_TITLE' applied successfully\");\n        await context.sync();\n      } catch (styleError) {\n        if (styleError.code === 'InvalidArgument') {\n          console.log(\"Style 'REQ_TITLE' not found, continuing without styling\");\n        } else {\n          console.error(\"Error applying style:\", styleError.message);\n        }\n      }\n            \n      // Move cursor to the end of the inserted text\n      insertedRange.select(\"End\");\n      console.log(\"Cursor positioned at end of inserted text\");\n            \n      await context.sync();\n    });\n    \n    console.log(\"=== Insert Requirement Function Completed Successfully ===\");\n    \n  } catch (error) {\n    console.error(\"Error inserting requirement:\", error);\n    \n    // Show error notification if possible\n    try {\n      Office.context.document.settings.set(\"lastAction\", \"Error inserting requirement\");\n    } catch (notificationError) {\n      console.error(\"Could not show error notification:\", notificationError);\n    }\n  }\n  \n  // Be sure to indicate when the add-in command function is complete\n  event.completed();\n}\n\n// Register the function with Office\nOffice.actions.associate(\"insertNewRequirement\", insertNewRequirement);\n"],"names":["e","t","r","Symbol","n","iterator","o","toStringTag","i","c","prototype","Generator","u","Object","create","_regeneratorDefine2","f","p","y","G","v","a","d","bind","length","l","TypeError","call","done","value","return","GeneratorFunction","GeneratorFunctionPrototype","getPrototypeOf","setPrototypeOf","__proto__","displayName","_regenerator","w","m","defineProperty","enumerable","configurable","writable","_invoke","_toConsumableArray","Array","isArray","_arrayLikeToArray","_arrayWithoutHoles","from","_iterableToArray","toString","slice","constructor","name","test","_unsupportedIterableToArray","_nonIterableSpread","asyncGeneratorStep","Promise","resolve","then","_asyncToGenerator","arguments","apply","_next","_throw","_insertNewRequirement","_callee2","event","_t2","_context2","console","log","Word","run","_ref","_callee","context","documentBody","regex","matches","nextReqNumber","reqNumbers","maxReqNumber","reqText","bookmarkName","selection","insertedRange","_t","_context","document","body","load","sync","text","match","concat","map","numberMatch","parseInt","Math","max","padStart","getSelection","insertText","InsertLocation","replace","insertBookmark","bookmarkError","error","style","code","message","select","_x2","Office","settings","set","notificationError","completed","onReady","actions","associate","_x"],"sourceRoot":""}